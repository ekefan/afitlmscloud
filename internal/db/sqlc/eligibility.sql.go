// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: eligibility.sql

package db

import (
	"context"
)

const getStudentEligibilityForAllCourses = `-- name: GetStudentEligibilityForAllCourses :many
SELECT
    c.name As course_name,
    cs.eligibility,
    c.course_code
FROM course_students cs
JOIN courses c ON c.course_code = cs.course_code
WHERE cs.student_id = $1
`

type GetStudentEligibilityForAllCoursesRow struct {
	CourseName  string  `json:"course_name"`
	Eligibility float64 `json:"eligibility"`
	CourseCode  string  `json:"course_code"`
}

func (q *Queries) GetStudentEligibilityForAllCourses(ctx context.Context, studentID int64) ([]GetStudentEligibilityForAllCoursesRow, error) {
	rows, err := q.query(ctx, q.getStudentEligibilityForAllCoursesStmt, getStudentEligibilityForAllCourses, studentID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetStudentEligibilityForAllCoursesRow{}
	for rows.Next() {
		var i GetStudentEligibilityForAllCoursesRow
		if err := rows.Scan(&i.CourseName, &i.Eligibility, &i.CourseCode); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
